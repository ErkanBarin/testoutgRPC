syntax = "proto3";

package Lab.Substance.Limits.Element.Limits;
import "lab_protobuf/google_protobuf.proto";
import "lab_protobuf/global/pagination.proto";
import "coingaming_protobuf/substance/limits/global.proto";
import "lab_protobuf/global/currency_code.proto";
import "lab_protobuf/global/sort_direction.proto";
import "lab_protobuf/global/datetime.proto";
import "coingaming_protobuf/substance/limits/element/get_limits.proto";
import "lab_protobuf/substance/lab/element/site.proto";

// Version that allows querying limits for users based on various filters and sorting options.
message Request {
  // Fields to be included in the response.
  Model.Fields fields = 1;
  // Filters to apply to the query.
  Filter filter = 2;
  // Sorting options for the query.
  Sort sort = 3;
  // Pagination options for the query.
  .Lab.Global.Pagination pagination = 4;
}

// The response message containing the list of limits and the total count.
message Response {
  // The list of limit models matching the query.
  repeated Model models = 1;
  // The total count of limit models matching the query.
  Google.Protobuf.UInt64Value total_count = 2;
}

// The model representing a limit.
message Model {
  Google.Protobuf.UInt64Value id                                    = 1;
  Google.Protobuf.UInt64Value user_id                               = 2;
  .Lab.Global.CurrencyCodeValue currency                            = 3;
  .Lab.Substance.Limits.Global.LimitTypeValue limit_type            = 4;
  .Lab.Substance.Limits.Global.PeriodTypeValue period_type          = 5;
  .Lab.Substance.Limits.Element.GetLimits.Amount active_amount      = 6;
  .Lab.Substance.Limits.Element.GetLimits.Counter active_counter    = 7;
  .Lab.Substance.Limits.Element.GetLimits.Amount unconfirmed_amount = 8;
  .Lab.Global.DateTime delete_requested_at                          = 9;
  .Lab.Substance.Limits.Global.RequestStatusValue request_status    = 10;
  .Lab.Global.DateTime deletion_blocked_until                       = 11;
  .Lab.Substance.Lab.Element.Site.Model site                        = 12;

  // Fields to be included in the Model.
  message Fields {
    Google.Protobuf.BoolValue id                      = 1;
    Google.Protobuf.BoolValue user_id                 = 2;
    Google.Protobuf.BoolValue currency                = 3;
    Google.Protobuf.BoolValue limit_type              = 4;
    Google.Protobuf.BoolValue period_type             = 5;
    Google.Protobuf.BoolValue active_amount           = 6;
    Google.Protobuf.BoolValue active_counter          = 7;
    Google.Protobuf.BoolValue unconfirmed_amount      = 8;
    Google.Protobuf.BoolValue delete_requested_at     = 9;
    Google.Protobuf.BoolValue request_status          = 10;
    Google.Protobuf.BoolValue deletion_blocked_until  = 11;
    .Lab.Substance.Lab.Element.Site.Model.Fields site = 12;
  }
}

// Filters to apply to the query.
message Filter {
  repeated uint64 user_ids                    = 1;
  .Lab.Substance.Lab.Element.Site.Filter site = 2;
}

// Sorting options for the query.
message Sort {
  // The sort direction for the ID field.
  .Lab.Global.SortDirectionValue id = 1;
}
